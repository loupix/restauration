"use strict";const myApp=angular.module("restaurant",["ngAnimate","ngResource","ngRoute","ngDialog","ngMaterial","ngCookies","ngFileUpload","ngSanitize","ngCsv","ngGeolocation","angular.google.distance","google.places","mgcrea.bootstrap.affix","restaurant.services","categorie.services","clients.services","panier.services","configuration.services","ingredients.services","produits.services"]);myApp.config(["$httpProvider",function($httpProvider){$httpProvider.defaults.headers.common["X-Requested-With"]="XMLHttpRequest",$httpProvider.defaults.headers.common["Content-Type"]="application/json",$httpProvider.defaults.headers.get||($httpProvider.defaults.headers.get={}),$httpProvider.defaults.headers.get["If-Modified-Since"]="0",$httpProvider.defaults.headers.get["Cache-Control"]="no-cache",$httpProvider.defaults.headers.get.Pragma="no-cache"}]),myApp.run(function($rootScope,$templateCache,$location,PanierService,anchorSmoothScroll){$rootScope.commandes=[],$rootScope.panier={},$rootScope.client={},$rootScope.restaurant={},$rootScope.loading=!1,$rootScope.total=0,$rootScope.$on("$locationChangeStart",function(event,next,current){$rootScope.loading=!0}),$rootScope.go=function(path){$.slidebars.close(),$location.path(path)},$rootScope.gotoAnchor=function(hash){return"/"!=$location.path()?$location.path("/"):anchorSmoothScroll.scrollTo(hash),!1},$rootScope.delCommande=function(commande){PanierService.delCommande(commande).then(function(panier){$rootScope.panier=panier,$rootScope.commandes=panier.commandes,$rootScope.total=panier.total},function(err){console.log(err),toastr.error(err.statusText)})},$rootScope.loadPanier=function(){PanierService.get().then(function(data){data.panier&&($rootScope.panier=data.panier,$rootScope.commandes=data.panier.commandes,$rootScope.total=data.panier.total),data.client&&($rootScope.client=data.client),data.restaurant&&($rootScope.restaurant=data.restaurant)},function(err){console.log(err),toastr.error(err.statusText)})},$rootScope.$on("$viewContentLoaded",function(){$templateCache.removeAll(),$rootScope.loading=!1})}),myApp.config(["$mdAriaProvider",function($mdAriaProvider){$mdAriaProvider.disableWarnings()}]),myApp.config(function($routeProvider,$locationProvider){$routeProvider.when("/",{templateUrl:"/accueil",controller:"accueilCtrl",cache:!0}).when("/panier",{templateUrl:"/panier",controller:"panierCtrl",cache:!0}).when("/choixPaiement",{templateUrl:"/choixPaiement",controller:"paiementCtrl",cache:!0}).when("/livraison",{templateUrl:"/livraison",controller:"livraisonCtrl",cache:!1}).when("/paiement",{templateUrl:"/paiement",controller:"paiementCtrl",cache:!1}).when("/validation",{templateUrl:"/validation",controller:"validationCtrl",cache:!1}).otherwise({redirectTo:"/"}),$routeProvider.when("/admin",{templateUrl:"/admin",controller:"accueilAdminCtrl",cache:!1}).when("/admin/index",{templateUrl:"/admin/categorie",controller:"categorieAdminCtrl",cache:!1}).when("/admin/categorie",{templateUrl:"/admin/categorie",controller:"categorieAdminCtrl",cache:!1}).when("/admin/produits",{templateUrl:"/admin/produits",controller:"produitsAdminCtrl",cache:!1}).when("/admin/ingredients",{templateUrl:"/admin/ingredients",controller:"ingredientsAdminCtrl",cache:!1}).when("/admin/configuration",{templateUrl:"/admin/configuration",controller:"restaurantAdminCtrl",cache:!1}).when("/admin/clients",{templateUrl:"/admin/clients",controller:"clientsAdminCtrl",cache:!1}),$locationProvider.html5Mode(!0).hashPrefix("!")}),myApp.controller("accueilAdminCtrl",["$scope",function($scope){}]),myApp.controller("categorieAdminCtrl",["$scope","CategorieService","$mdDialog",function($scope,$CategorieService,$mdDialog){function DialogController($scope,$mdDialog,parentScope,CategorieService,categorie,type){$scope.categorie={},$scope.type=type,$scope.parentScope=parentScope,angular.copy(categorie,$scope.categorie),$scope.categorie=!1===$scope.categorie?{nom:""}:$scope.categorie,$scope.valide=function(){"ajouter"==$scope.type?CategorieService.add($scope.categorie).then(function(categorie){$scope.parentScope.init(),$mdDialog.hide(),toastr.success("Catégorie ajouté")},function(err){toastr.error(err.statusTxt)}):"modifier"==type?CategorieService.modif($scope.categorie).then(function(categorie){$scope.parentScope.init(),$mdDialog.hide(),toastr.success("Catégorie modifié")},function(err){toastr.error(err.statusTxt)}):toastr.error("mauvais choix")},$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()},$scope.answer=function(answer){$mdDialog.hide(answer)}}$scope.categories=[],$scope.categoriesAfficher=[],$scope.search="",$scope.init=function(){$CategorieService.getAll().then(function(categories){$scope.categories=categories,angular.copy($scope.categories,$scope.categoriesAfficher)},function(error){toastr.error(error.statusTxt)})},$scope.delete=function(categorie){$CategorieService.del(categorie).then(function(rep){if(rep.error)return toastr.error(rep.error.statusTxt);$scope.init(),toastr.success("Catégorie supprimé")},function(error){toastr.error(error.statusTxt)})},$scope.onSearch=function(){$scope.categoriesAfficher=$scope.categories.filter(function(cat){return-1!==cat.nom.toLowerCase().indexOf($scope.search.toLowerCase())})},$scope.showDialog=function(ev,categorie,type){$mdDialog.show({controller:DialogController,templateUrl:"/admin/dialog/ajoutCategorie",parent:angular.element(document.body),locals:{parentScope:$scope,CategorieService:$CategorieService,categorie:categorie,type:type},targetEvent:ev,clickOutsideToClose:!0}).then(function(answer){$scope.status='You said the information was "'+answer+'".'},function(){$scope.status="You cancelled the dialog."})}}]),myApp.controller("produitsAdminCtrl",["$scope","Upload","ProduitsService","IngredientsService","$mdDialog",function($scope,Upload,$ProduitsService,$IngredientsService,$mdDialog){function DialogController($scope,$mdDialog,parentScope,Upload,ProduitsService,IngredientsService,ingredients,produit,type){$scope.produit={},$scope.ingredients=[],$scope.ingActive={},$scope.type=type,$scope.parentScope=parentScope,$scope.choix={complet:!0,simple:!1},angular.copy(produit,$scope.produit),angular.copy(ingredients,$scope.ingredients),$scope.produit=!1===produit?{nom:"",tailles:[{nom:"",prix:0}],prix:0,photo:null,description:"",categorie:!1,ingredients:[],base:null}:$scope.produit,$scope.produit.categorie||($scope.produit.categorie=$scope.parentScope.categorieEnCour),0==$scope.produit.tailles.length&&($scope.produit.tailles=[{nom:"",prix:0}]),!1!==produit&&produit.ingredients.forEach(function(ing){$scope.ingActive[ing._id]=!0}),$scope.changeChoix=function(choix){"complet"==choix?($scope.choix.complet=!0,$scope.choix.simple=!1):"simple"==choix?($scope.choix.complet=!1,$scope.choix.simple=!0):toastr.error("mauvais choix")},$scope.addTaille=function(){$scope.produit.tailles.push({nom:"",prix:0})},$scope.delTaille=function(index){$scope.produit.tailles.splice(index,1)},$scope.upload=function(file){Upload.upload({url:"/api/produits/upload",data:{file:file,produit:$scope.produit}}).then(function(resp){$scope.produit.photo="/images/"+resp.config.data.file.name,console.log("Success "+resp.config.data.file.name+"uploaded. Response: "+resp.data)},function(resp){console.log("Error status: "+resp.status)},function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log("progress: "+progressPercentage+"% "+evt.config.data.file.name)})},$scope.modifIngredient=function(ingId){IngredientsService.get(ingId).then(function(ingredient){if($scope.ingActive[ingId]&&void 0!==$scope.ingActive[ingId]){var idx=$scope.produit.ingredients.map(function(ing){return ing._id}).indexOf(ingredient._id);-1!==idx?$scope.produit.ingredients.splice(idx,1):console.log("mauvais idx "+idx),$scope.ingActive[ingId]=!1}else $scope.produit.ingredients.push(ingredient),$scope.ingActive[ingId]=!0})},$scope.modifBase=function(ingId){IngredientsService.get(ingId).then(function(ingredient){$scope.ingredients.forEach(function(ing){ing.base&&($scope.ingActive[ing._id]=!1)}),$scope.ingActive[ingId]&&void 0!==$scope.ingActive[ingId]?($scope.produit.base=null,$scope.ingActive[ingId]=!1):($scope.produit.base=ingredient,$scope.ingActive[ingId]=!0)})},$scope.valide=function(){"ajouter"==$scope.type?ProduitsService.add($scope.produit).then(function(produit){$scope.parentScope.init(),$scope.parentScope.loadProduits(),$mdDialog.hide(),toastr.success("Produit ajouté")},function(err){toastr.error(err.statusTxt)}):"modifier"==type?ProduitsService.modif($scope.produit).then(function(produit){$scope.parentScope.init(),$scope.parentScope.loadProduits(),$mdDialog.hide(),toastr.success("Produit modifié")},function(err){toastr.error(err.statusTxt)}):toastr.error("mauvais choix")},$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()},$scope.answer=function(answer){$mdDialog.hide(answer)}}$scope.produits=[],$scope.produitsAfficher=[],$scope.search="",$scope.ingredients=[],$scope.categories=[],$scope.categorieEnCour=!1,$scope.init=function(){$ProduitsService.getCategories().then(function(categories){if($scope.categories=categories,categories.length>0){var cat=categories[0];$scope.categorieEnCour=cat,$scope.loadProduits()}},function(error){toastr.error(error.message)})},$scope.loadProduits=function(){$ProduitsService.getByCategorie($scope.categorieEnCour).then(function(produits){console.log(produits),$IngredientsService.getAll().then(function(ingredients){$scope.ingredients=ingredients},function(err){toastr.error(err.message)}),$scope.produits=produits,angular.copy($scope.produits,$scope.produitsAfficher),angular.forEach($scope.produits,function(prod){prod.ingredientTxt=prod.ingredients.map(function(ing){return ing.nom}).join(", ")})},function(err){toastr.error(error.message)})},$scope.delete=function(produit){$ProduitsService.del(produit).then(function(rep){if(rep.error)return toastr.error(rep.error.message);$scope.loadProduits(),toastr.info("Produit supprimé")},function(error){toastr.error(error.message)})},$scope.modif=function(produit){$ProduitsService.modif(produit).then(function(rep){if(rep.error)return toastr.error(rep.error.message);toastr.info("Produit modifié"),$scope.loadProduits()},function(error){toastr.error(error.message)})},$scope.onSearch=function(){$scope.produitsAfficher=$scope.produits.filter(function(produit){return-1!==produit.nom.toLowerCase().indexOf($scope.search.toLowerCase())})},$scope.showDialog=function(ev,produit,type){$mdDialog.show({controller:DialogController,templateUrl:"/admin/dialog/ajoutProduit",parent:angular.element(document.body),locals:{parentScope:$scope,Upload:Upload,ProduitsService:$ProduitsService,IngredientsService:$IngredientsService,ingredients:$scope.ingredients,produit:produit,type:type},targetEvent:ev,clickOutsideToClose:!0}).then(function(answer){$scope.status='You said the information was "'+answer+'".'},function(){$scope.status="You cancelled the dialog."})}}]),myApp.controller("ingredientsAdminCtrl",["$scope","IngredientsService","$mdDialog",function($scope,$IngredientsService,$mdDialog){function DialogController($scope,$mdDialog,parentScope,IngredientsService,ingredient,type){$scope.ingredient={},$scope.type=type,$scope.parentScope=parentScope,angular.copy(ingredient,$scope.ingredient),$scope.ingredient=!1===$scope.ingredient?{nom:"",prix:0}:$scope.ingredient,$scope.valide=function(){"ajouter"==$scope.type?IngredientsService.add($scope.ingredient).then(function(ingredient){$scope.parentScope.init(),$mdDialog.hide(),toastr.success("Ingrédient ajouté")},function(err){toastr.error(err.statusTxt)}):"modifier"==type?IngredientsService.modif($scope.ingredient).then(function(ingredient){$scope.parentScope.init(),$mdDialog.hide(),toastr.success("Ingrédient modifié")},function(err){toastr.error(err.statusTxt)}):toastr.error("mauvais choix")},$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()},$scope.answer=function(answer){$mdDialog.hide(answer)}}$scope.ingredients=[],$scope.ingredientsAfficher=[],$scope.search="",$scope.init=function(){$IngredientsService.getAll().then(function(ingredients){$scope.ingredients=ingredients,angular.copy($scope.ingredients,$scope.ingredientsAfficher)},function(error){toastr.error(error.message)})},$scope.delete=function(ingredient){$IngredientsService.del(ingredient).then(function(rep){if(rep.error)return toastr.error(rep.error);$scope.init(),toastr.info("Ingrédient supprimé")},function(error){toastr.error(error.statusTxt)})},$scope.modif=function(ingredient){$IngredientsService.modif(ingredient).then(function(rep){if(rep.error)return toastr.error(rep.error.statusTxt);$scope.init(),toastr.info("Ingredient modifié")},function(error){toastr.error(error.statusTxt)})},$scope.onSearch=function(){$scope.ingredientsAfficher=$scope.ingredients.filter(function(ingredient){return-1!==ingredient.nom.toLowerCase().indexOf($scope.search.toLowerCase())})},$scope.showDialog=function(ev,ingredient,type){$mdDialog.show({controller:DialogController,templateUrl:"/admin/dialog/ajoutIngredient",parent:angular.element(document.body),locals:{parentScope:$scope,IngredientsService:$IngredientsService,ingredient:ingredient,type:type},targetEvent:ev,clickOutsideToClose:!0}).then(function(answer){$scope.status='You said the information was "'+answer+'".'},function(){$scope.status="You cancelled the dialog."})}}]),myApp.controller("restaurantAdminCtrl",["$scope","RestaurantService","$mdDialog","Upload",function($scope,$RestaurantService,$mdDialo,Upload){$scope.place=null,$scope.onModif=!1,$scope.autocompleteOptions={componentRestrictions:{country:"fr"},types:["geocode"]},$scope.restaurant={enseigne:"",photo:"",adresse:{adresse:null,codePostal:null,ville:null,latitude:0,longitude:0,googleId:0},tempPreparation:0,livraison:{livraison:!1,distance:0,duree:0,paiement:{livraison:!1,surPlace:!1,enLigne:!1},tarif:0,minGratuit:0},admin:{username:"",password:null},horraires:[],fermetures:[]},$scope.heureSemaine=[];for(var i=0;i<24;i++)$scope.heureSemaine.push(new Date(2017,10,20,i)),$scope.heureSemaine.push(new Date(2017,10,20,i,15)),$scope.heureSemaine.push(new Date(2017,10,20,i,30)),$scope.heureSemaine.push(new Date(2017,10,20,i,45));$scope.joursSemaine=[new Date(2017,10,20),new Date(2017,10,21),new Date(2017,10,22),new Date(2017,10,23),new Date(2017,10,24),new Date(2017,10,25),new Date(2017,10,26)],$scope.init=function(){$RestaurantService.getMe().then(function(restaurant){$scope.restaurant._id=restaurant._id,$scope.restaurant.adresse=restaurant.adresse,$scope.restaurant.adresse.codePostal=parseInt(restaurant.adresse.codePostal),$scope.restaurant.enseigne=restaurant.enseigne,$scope.restaurant.livraison=restaurant.livraison,$scope.restaurant.photo=restaurant.photo,$scope.restaurant.email=restaurant.email,$scope.restaurant.telephone=restaurant.telephone,$scope.restaurant.tempPreparation=restaurant.tempPreparation,$scope.restaurant.horraires=restaurant.horraires.map(function(h){return{jour:new Date(h.jour),matin:{ouverture:new Date(h.matin.ouverture),fermeture:new Date(h.matin.fermeture)},apresMidi:{ouverture:new Date(h.apresMidi.ouverture),fermeture:new Date(h.apresMidi.fermeture)}}}),$scope.restaurant.fermetures=restaurant.fermetures.map(function(d){return new Date(d)}),$scope.restaurant.admin.username=restaurant.admin.username,$scope.restaurant.distanceLivraison=parseFloat(restaurant.distanceLivraison),document.getElementById("adresse").value=restaurant.adresse.adresse},function(err){$scope.onModif=!1,toastr.error(err)})},$scope.upload=function(file){Upload.upload({url:"/api/restaurant/upload",data:{file:file,restaurant:$scope.restaurant}}).then(function(resp){$scope.restaurant.photo="/images/"+resp.config.data.file.name,console.log("Success "+resp.config.data.file.name+"uploaded. Response: "+resp.data)},function(resp){console.log("Error status: "+resp.status)},function(evt){var progressPercentage=parseInt(100*evt.loaded/evt.total);console.log("progress: "+progressPercentage+"% "+evt.config.data.file.name)})},$scope.addHorraire=function(){$scope.restaurant.horraires.push({jour:new Date(2017,10,20),matin:{ouverture:new Date(2017,10,20,11),fermeture:new Date(2017,10,20,13,30)},apresMidi:{ouverture:new Date(2017,10,20,18),fermeture:new Date(2017,10,20,21,30)}}),$scope.modif()},$scope.delHorraire=function(horraire){var idx=$scope.restaurant.horraires.indexOf(horraire);-1!=idx?$scope.restaurant.horraires.splice(idx,1):console.log("mauvais idx "+idx),$scope.modif()},$scope.addFermeture=function(){$scope.restaurant.fermetures.push(new Date),$scope.modif()},$scope.delFermeture=function(fermeture){var idx=$scope.restaurant.fermetures.indexOf(fermeture);-1!=idx?$scope.restaurant.fermetures.splice(idx,1):console.log("mauvais idx "+idx),$scope.modif()},$scope.modif=function(){$scope.onModif=!0,$RestaurantService.modif($scope.restaurant).then(function(restaurant){$scope.onModif=!1,$scope.restaurant=restaurant,$scope.restaurant.horraires=restaurant.horraires.map(function(h){return{jour:new Date(h.jour),matin:{ouverture:new Date(h.matin.ouverture),fermeture:new Date(h.matin.fermeture)},apresMidi:{ouverture:new Date(h.apresMidi.ouverture),fermeture:new Date(h.apresMidi.fermeture)}}}),$scope.restaurant.fermetures=restaurant.fermetures.map(function(d){return new Date(d)}),toastr.info("Restaurant modifié")},function(err){toastr.error(err)})},$scope.loadPlace=function(){for(var i=0;i<$scope.place.address_components.length;i++){"postal_code"==$scope.place.address_components[i].types[0]&&($scope.restaurant.adresse.codePostal=parseInt($scope.place.address_components[i].long_name))}$scope.restaurant.adresse.adresse=$scope.place.name,$scope.restaurant.adresse.ville=$scope.place.vicinity,$scope.restaurant.adresse.googleId=$scope.place.place_id,$scope.restaurant.adresse.latitude=$scope.place.geometry.location.lat(),$scope.restaurant.adresse.longitude=$scope.place.geometry.location.lng()}}]),myApp.controller("clientsAdminCtrl",["$scope","ClientsService","$mdDialog",function($scope,$ClientsService,$mdDialog){$scope.clients=[],$scope.clientsAfficher=[],$scope.export={filename:"clients",values:[],header:["Nom","Prenom","Email","Téléphone","Adresse","Ville","Code postal"],separator:";"},$scope.init=function(){$ClientsService.getAll().then(function(clients){$scope.clients=clients,angular.copy($scope.clients,$scope.clientsAfficher),$scope.export.values=clients.map(function(client){return{nom:client.nom,prenom:client.prenom,email:client.email,telephone:client.telephone,adresse:client.adresse.adresse,ville:client.adresse.ville,codePostal:client.adresse.codePostal}})},function(error){toastr.error(error.message)})},$scope.delete=function(client){$ClientService.del(client).then(function(rep){return rep.error?toastr.error(rep.error):$scope.init()},function(err){toastr.error(err)})},$scope.modif=function(client){$ClientService.modif(client).then(function(rep){return rep.error?toastr.error(rep.error):$scope.init()},function(err){toastr.error(err)})},$scope.onSearch=function(){$scope.clientsAfficher=$scope.clients.filter(function(client){return-1!==client.nom.toLowerCase().indexOf($scope.search.toLowerCase())})}}]),myApp.controller("MainCtrl",["$scope","$rootScope","anchorSmoothScroll",function($scope,$rootScope,anchorSmoothScroll){$rootScope.loading=!0,$scope.gotoAnchor=function(hash){return anchorSmoothScroll.scrollTo(hash),!1}}]),myApp.controller("accueilCtrl",["$scope","$rootScope","$timeout","anchorSmoothScroll","$sce","$mdDialog","$location","$cookieStore","ProduitsService","PanierService","IngredientsService","ClientsService",function($scope,$rootScope,$timeout,anchorSmoothScroll,$sce,$mdDialog,$location,$cookieStore,$ProduitsService,$PanierService,$IngredientsService,$ClientsService){function DialogController($scope,$mdDialog,IngredientsService,ingredients,prodId,infosProds,total,parentScope,ProduitsService,PanierService,ClientsService,cookieStore){$(".btn-collapse").click(),$scope.ingredients={},$scope.infosProds={},angular.copy(ingredients,$scope.ingredients),angular.copy(infosProds,$scope.infosProds),$scope.total=total,$scope.prodId=prodId,$scope.produit=$scope.infosProds[prodId],$scope.parentScope=parentScope,$scope.ingActive=[],Object.keys($scope.ingredients).forEach(function(k){$scope.ingActive[k]=!1}),infosProds[$scope.prodId].ingredients.more.forEach(function(ing){$scope.ingActive[ing._id.toString()]=!0,$scope.total+=ing.prix}),$scope.tailleActive=[],$scope.produit.tailles.length>0&&$scope.produit.tailles.forEach(function(taille){$scope.produit.taille==taille?$scope.tailleActive[taille._id]=!0:$scope.tailleActive[taille._id]=!1}),infosProds[$scope.prodId].ingredients.base&&($scope.ingActive[infosProds[$scope.prodId].ingredients.base._id.toString()]=!0),$scope.addIngredient=function(ingId){var ingredient=$scope.ingredients[ingId];$scope.prodId;if($scope.ingActive[ingId]){$scope.ingActive[ingId]=!1,$scope.total-=$scope.ingredients[ingId].prix;var idx=$scope.infosProds[$scope.prodId].ingredients.more.indexOf(ingredient);-1!==idx&&$scope.infosProds[$scope.prodId].ingredients.more.splice(idx,1)}else $scope.infosProds[$scope.prodId].ingredients.more.push(ingredient),$scope.ingActive[ingId]=!0,$scope.total+=$scope.ingredients[ingId].prix;return parentScope.calculTotalProd($scope.prodId),!1},$scope.delIngredient=function(ingId){var ingredient=$scope.ingredients[ingId];$scope.prodId;if($scope.ingActive[ingId]){$scope.ingActive[ingId]=!1;var idx=$scope.infosProds[$scope.prodId].ingredients.less.indexOf(ingredient);-1!==idx&&$scope.infosProds[$scope.prodId].ingredients.less.splice(idx,1)}else $scope.infosProds[$scope.prodId].ingredients.less.push(ingredient),$scope.ingActive[ingId]=!0;return parentScope.calculTotalProd($scope.prodId),!1},$scope.changeBase=function(ingId){Object.keys($scope.ingredients).forEach(function(k){$scope.ingredients[k].base&&($scope.ingActive[k]=!1)});var ingredient=$scope.ingredients[ingId];$scope.prodId;$scope.ingActive[ingId]?($scope.ingActive[ingId]=!1,$scope.infosProds[$scope.prodId].ingredients.base=!1):($scope.infosProds[$scope.prodId].ingredients.base=ingredient,$scope.ingActive[ingId]=!0)},$scope.changeTaille=function(tailleId){if($scope.produit.tailles.length<=1)return void($scope.tailleActive[tailleId]=!0);$scope.produit.tailles.forEach(function(taille){taille._id==tailleId?$scope.tailleActive[taille._id]?($scope.total-=taille.prix,$scope.tailleActive[taille._id]=!1):($scope.total+=taille.prix,$scope.tailleActive[taille._id]=!0):($scope.tailleActive[taille._id]&&($scope.total-=taille.prix),$scope.tailleActive[taille._id]=!1)});var taille=$scope.produit.tailles.filter(function(t){return t._id==tailleId})[0];$scope.produit.taille=taille},$scope.getTotal=function(){$scope.total=Math.round(100*$scope.total)/100;var n=Math.floor($scope.total),d=(""+($scope.total-n).toFixed(2)).split(".");return d.length>1?$sce.trustAsHtml(n+".<span class='cents'>"+d[1]+"</span>&nbsp;&euro;"):$sce.trustAsHtml(n+".<span class='cents'>00</span>&nbsp;&euro;")},$scope.valide=function(){var prodId=$scope.prodId;$scope.infosProds[prodId]=$scope.produit,parentScope.infosProds=$scope.infosProds,parentScope.ajout(prodId),$mdDialog.hide()},$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()},$scope.answer=function(answer){$mdDialog.hide(answer)}}$scope.isInit=!0,$scope.categorie=null,$scope.catId=null,$scope.infosProds={},$scope.produits=[],$scope.client={},$scope.restaurant={},$scope.ingredients={},$scope.commandes=[],$scope.total=parseFloat(0),$scope.produitOpen={},$scope.produitZindex={},$scope.backProduit=3,$scope.onLoadProduits=!1,$scope.closeCommandes=function(){$scope.backProduit=3;for(var k in $scope.produitOpen)$scope.produitOpen[k]=!1,$scope.produitZindex[k]=5},$scope.changeProduit=function(pid){$scope.closeCommandes(),$scope.produitOpen[pid]=!0,$scope.backProduit=6,$scope.produitZindex[pid]=7},$scope.getTotal=function(){$scope.total=Math.round(100*$scope.total)/100;var n=Math.floor($scope.total),d=(""+($scope.total-n).toFixed(2)).split(".");return d.length>1?$sce.trustAsHtml(n+".<span class='cents'>"+d[1]+"</span>&nbsp;&euro;"):$sce.trustAsHtml(n+".<span class='cents'>00</span>&nbsp;&euro;")},$scope.init=function(catId){console.log("init Accueil"),$scope.catId=catId,$ClientsService.getMe().then(function(data){$cookieStore.put("client",data.client),$cookieStore.put("panier",data.panier)},function(err){console.log(err),toastr.error(err.statusText)}),$scope.loadIngredients(),$scope.loadProduits()},$scope.loadPanier=function(){$PanierService.get().then(function(data){data.panier&&($scope.commandes=data.panier.commandes,$scope.client=data.panier.client,$scope.restaurant=data.panier.restaurant,$scope.total=data.panier.total,angular.copy($scope.commandes,$rootScope.commandes),angular.copy(data.panier,$rootScope.panier))},function(err){console.log(err),toastr.error(err.statusText)})},$scope.loadProduits=function(loader){var loader=void 0===loader||loader;loader&&($scope.onLoadProduits=!0),$ProduitsService.getByCategorie({_id:$scope.catId}).then(function(produits){produits=produits.filter(function(prod){return prod.stock}),$scope.produits=new Array,produits.forEach(function(prod){$scope.infosProds[prod._id]={taille:!1,tailles:prod.tailles,prix:prod.prix,total:prod.prix,quantite:1,ingredients:{base:prod.base,more:[],less:[]}},prod.tailles.length>0&&($scope.infosProds[prod._id].taille=prod.tailles[0]),$scope.categorie=prod.categorie,$scope.catId=prod.categorie._id,$scope.produits.push(prod)}),$timeout(function(){$scope.onLoadProduits=!1},600)},function(err){console.log(err),toastr.error(err.statusText)})},$scope.loadIngredients=function(){$IngredientsService.getAll().then(function(ingredients){ingredients.forEach(function(ing){$scope.ingredients[ing._id.toString()]=ing})},function(err){console.log(err),toastr.error(err.statusText)})},$scope.addQuantite=function(prodId){return $scope.infosProds[prodId].quantite=$scope.infosProds[prodId].quantite+1,$scope.calculTotalProd(prodId),!1},$scope.delQuantite=function(prodId){return $scope.infosProds[prodId].quantite=$scope.infosProds[prodId].quantite-1,$scope.infosProds[prodId].quantite<1&&($scope.infosProds[prodId].quantite=1),$scope.calculTotalProd(prodId),!1},$scope.calculTotalProd=function(prodId){var tot=0;return console.log(prodId),$scope.infosProds[prodId].ingredients.more.length&&(tot+=$scope.infosProds[prodId].ingredients.more.map(function(ing){return ing.prix}).reduce(function(a,b){return a+b})),tot+=$scope.infosProds[prodId].prix,$scope.infosProds[$scope.prodId].taille&&(tot+=$scope.infosProds[$scope.prodId].taille.prix),tot*=$scope.infosProds[prodId].quantite,$scope.infosProds[prodId].total=Math.round(100*tot)/100,!1},$scope.changeCategorie=function(catId){$scope.catId=catId,$scope.closeCommandes(),$scope.loadProduits()},$scope.ajout=function(prodId){$ProduitsService.get(prodId).then(function(produit){$PanierService.addCommande(produit,$scope.infosProds[produit._id]).then(function(commande){$scope.commandes.push(commande),$scope.infosProds[produit._id]={taille:!1,base:produit.base,prix:produit.prix,total:produit.prix,quantite:1,ingredients:{more:[],less:[]}},produit.tailles.length>0&&($scope.infosProds[produit._id].taille=produit.tailles[0]),$scope.loadPanier(),toastr.success("Ajouter au panier"),$scope.loadProduits(!1),$scope.loadIngredients()},function(err){console.log(err),toastr.error(err.statusText)})},function(err){console.log(err),toastr.error(err.statusText)})},$scope.showDialog=function(ev,prodId){$scope.prodId=prodId,$mdDialog.show({controller:DialogController,templateUrl:"/dialogIngredient?prodId="+prodId,parent:angular.element(document.body),locals:{IngredientsService:$IngredientsService,ingredients:$scope.ingredients,prodId:prodId,infosProds:$scope.infosProds,total:$scope.infosProds[prodId].total,parentScope:$scope,ProduitsService:$ProduitsService,PanierService:$PanierService,ClientsService:$ClientsService,cookieStore:$cookieStore},targetEvent:ev,clickOutsideToClose:!0}).then(function(answer){$scope.status='You said the information was "'+answer+'".'},function(){$scope.status="You cancelled the dialog."})}}]),myApp.controller("panierCtrl",["$scope","$rootScope","$location","$route","$cookieStore","ProduitsService","IngredientsService","PanierService","ClientsService",function($scope,$rootScope,$location,$route,$cookieStore,$ProduitsService,$IngredientsService,$PanierService,$ClientsService){function DialogController($scope,$mdDialog,IngredientsService,commandes,prodId,infosCmds,total,parentScope,PanierService,ClientsService,cookieStore){$scope.commandes=commandes,$scope.total=total,$scope.infosProds=infosProds,$scope.prodId=prodId,$scope.parentScope=parentScope,$scope.ingActive=[],Object.keys(ingredients).forEach(function(k){$scope.ingActive[k]=!1}),infosProds[$scope.prodId].ingredients.more.forEach(function(ing){$scope.ingActive[ing._id.toString()]=!0,$scope.total+=ing.prix}),$scope.addIngredient=function(ingId){var ingredient=$scope.ingredients[ingId];$scope.prodId;if($scope.ingActive[ingId]){$scope.ingActive[ingId]=!1,$scope.total-=$scope.ingredients[ingId].prix;var idx=$scope.infosProds[$scope.prodId].ingredients.more.indexOf(ingredient);-1!==idx&&$scope.infosProds[$scope.prodId].ingredients.more.splice(idx,1)}else $scope.infosProds[$scope.prodId].ingredients.more.push(ingredient),$scope.ingActive[ingId]=!0,$scope.total+=$scope.ingredients[ingId].prix;return parentScope.calculTotalProd($scope.prodId),!1},$scope.delIngredient=function(ingId){var ingredient=$scope.ingredients[ingId];$scope.prodId;if($scope.ingActive[ingId]){$scope.ingActive[ingId]=!1,$scope.total-=$scope.ingredients[ingId].prix;var idx=$scope.infosProds[$scope.prodId].ingredients.less.indexOf(ingredient);-1!==idx&&$scope.infosProds[$scope.prodId].ingredients.less.splice(idx,1)}else $scope.infosProds[$scope.prodId].ingredients.less.push(ingredient),$scope.ingActive[ingId]=!0;return parentScope.calculTotalProd($scope.prodId),!1},$scope.getTotal=function(){$scope.total=Math.round(100*$scope.total)/100;var n=Math.floor($scope.total),d=(""+($scope.total-n).toFixed(2)).split(".");return d.length>1?$sce.trustAsHtml(n+".<span class='cents'>"+d[1]+"</span>&nbsp;&euro;"):$sce.trustAsHtml(n+".<span class='cents'>00</span>&nbsp;&euro;")},$scope.valide=function(){var prodId=$scope.prodId;$scope.infosProds[prodId],parentScope.infosProds=$scope.infosProds,parentScope.calculTotalProd(prodId),parentScope.loadPanier(),$mdDialog.hide()},$scope.hide=function(){$mdDialog.hide()},$scope.cancel=function(){$mdDialog.cancel()},$scope.answer=function(answer){$mdDialog.hide(answer)}}$scope.infosCmds={},$scope.panier=null,$scope.commandes=[],$scope.client=null,$scope.restaurant=null,$scope.livraison=null,$scope.go=function(path){$location.path(path)},$scope.setLivraison=function(livraison){$cookieStore.put("livraison",livraison),$scope.livraison=livraison,"chezSoi"==livraison?($scope.client.livraison.surPlace=!1,$scope.client.livraison.domicile=!0):"surPlace"==livraison?($scope.client.livraison.surPlace=!0,$scope.client.livraison.domicile=!1):console.log("Pas de choix de livraison"),$ClientsService.modif($scope.client._id,$scope.client).then(function(client){$scope.client=client},function(err){console.log(err),toastr.error(err.statusText)})},$scope.init=function(){console.log("init Panier"),$PanierService.get().then(function(data){$scope.panier=data.panier,$scope.client=data.client,$scope.restaurant=data.restaurant,$scope.commandes=data.panier.commandes,$scope.commandes.forEach(function(cmd){$scope.infosCmds[cmd._id]={quantite:cmd.quantite,total:cmd.total,ingredients:{base:[],more:cmd.ingredients.more,less:cmd.ingredients.less}},null!==cmd.taille&&($scope.infosCmds[cmd._id].taille=cmd.taille._id),$scope.client.livraison.domicile?$scope.livraison="chezSoi":($scope.client.livraison.surPlace,$scope.livraison="surPlace")}),$cookieStore.get("livraison")?$scope.setLivraison($cookieStore.get("livraison")):$scope.setLivraison("enLigne"),angular.copy($scope.commandes,$rootScope.commandes),angular.copy($scope.panier,$rootScope.panier)},function(err){console.log(err),toastr.error(err.statusText)})},$scope.addQuantite=function(cmdId){$scope.infosCmds[cmdId].quantite=$scope.infosCmds[cmdId].quantite+1,$PanierService.modifCommande({_id:cmdId},$scope.infosCmds[cmdId]).then(function(commande){$scope.infosCmds[cmdId].total=commande.total,$scope.init()},function(err){console.log(err),toastr.error(err.statusText)})},$scope.delQuantite=function(cmdId){$scope.infosCmds[cmdId].quantite=$scope.infosCmds[cmdId].quantite-1,$scope.infosCmds[cmdId].quantite<1&&($scope.infosCmds[cmdId].quantite=1),$PanierService.modifCommande({_id:cmdId},$scope.infosCmds[cmdId]).then(function(commande){$scope.infosCmds[cmdId].total=commande.total,$scope.init()},function(err){console.log(err),toastr.error(err.statusText)})},$scope.delCommande=function(cmdId){$PanierService.delCommande({_id:cmdId}).then(function(panier){$scope.panier=panier,angular.copy(panier.commandes,$rootScope.commandes)},function(err){console.log(err),toastr.error(err.statusText)})},$scope.modifCommande=function(cmdId){$PanierService.modifCommande({_id:cmdId}).then(function(commande){$route.reload()},function(err){console.log(err),toastr.error(err.statusText)})},$scope.init(),$scope.showDialog=function(ev,cmdId){$scope.prodId=prodId,$mdDialog.show({controller:DialogController,templateUrl:"/dialogIngredient?prodId="+prodId,parent:angular.element(document.body),locals:{IngredientsService:$IngredientsService,commandes:$scope.commandes,prodId:prodId,infosCmds:$scope.infosCmds,total:$scope.infosCmds[cmdId].total,parentScope:$scope,PanierService:$PanierService,ClientsService:$ClientsService,cookieStore:$cookieStore},targetEvent:ev,clickOutsideToClose:!0}).then(function(answer){$scope.status='You said the information was "'+answer+'".'},function(){$scope.status="You cancelled the dialog."})}}]),myApp.controller("livraisonCtrl",["$scope","$rootScope","$location","$route","$cookieStore","ProduitsService","IngredientsService","PanierService","ClientsService",function($scope,$rootScope,$location,$route,$cookieStore,$ProduitsService,$IngredientsService,$PanierService,$ClientsService){$scope.commandes=[],$scope.place=null,$scope.panier=null,$scope.client=null,$scope.restaurant=null,$scope.loading=!1,$scope.choixPaiement=!1,$scope.autocompleteOptions={componentRestrictions:{country:"fr"},types:["geocode"]},$scope.go=function(path){$location.path(path)},$scope.init=function(){console.log("init Paiement"),$PanierService.get().then(function(data){$scope.loading=!1,$scope.panier=data.panier,$scope.client=data.client,$scope.client.typePaiement="cash",$scope.client.distance=0,$scope.client.adresse={adresse:"",ville:"",googleId:!1,latitude:0,longitude:0},$scope.restaurant=data.restaurant,$scope.commandes=data.panier.commandes},function(err){console.log(err),toastr.error(err.statusText)}),$cookieStore.get("choixPaiement")&&($scope.choixPaiement=$cookieStore.get("choixPaiement")),$cookieStore.get("livraison")&&($scope.livraison=$cookieStore.get("livraison"))},$scope.valide=function(){$rootScope.loading=!0,$ClientsService.modif($scope.client._id,$scope.client).then(function(client){$scope.client=client,$PanierService.sendMail($scope.client,$scope.panier).then(function(mail){return $location.path("/validation"),!0},function(err){return console.log(err),toastr.error(err.statusTxt),!1})},function(err){return console.log(err),toastr.error(err.statusTxt),!1})},$scope.loadPlace=function(){console.log($scope.place);for(var i=0;i<$scope.place.address_components.length;i++){"postal_code"==$scope.place.address_components[i].types[0]&&($scope.client.adresse.codePostal=parseInt($scope.place.address_components[i].long_name))}$scope.client.adresse.adresse=$scope.place.name,$scope.client.adresse.ville=$scope.place.vicinity,$scope.client.adresse.googleId=$scope.place.place_id,$scope.client.adresse.latitude=$scope.place.geometry.location.lat(),$scope.client.adresse.longitude=$scope.place.geometry.location.lng();var dep=new Parse.GeoPoint([$scope.place.geometry.location.lat(),$scope.place.geometry.location.lng()]),arr=new Parse.GeoPoint([$scope.restaurant.adresse.latitude,$scope.restaurant.adresse.longitude]);$scope.client.distance=Math.round(100*dep.kilometersTo(arr))/100},$scope.init(),$scope.getLivraison=function(){return null==$scope.restaurant?0:$scope.restaurant.livraison.minGratuit<$scope.panier.total?0:$scope.restaurant.livraison.tarif},$scope.getTotal=function(){return null==$scope.restaurant?0:$scope.restaurant.livraison.minGratuit<$scope.panier.total?$scope.panier.total:$scope.panier.total+$scope.restaurant.livraison.tarif}}]),myApp.controller("paiementCtrl",["$scope","$rootScope","$location","$cookieStore","ProduitsService","IngredientsService","PanierService","ClientsService",function($scope,$rootScope,$location,$cookieStore,$ProduitsService,$IngredientsService,$PanierService,$ClientsService){$scope.commandes=[],$scope.panier=null,$scope.client=null,$scope.restaurant=null,$scope.choixPaiement=!1,$scope.go=function(path){$location.path(path)},$scope.init=function(){console.log("init Paiement"),$PanierService.get().then(function(data){$scope.loading=!1,$scope.panier=data.panier,$scope.client=data.client,$scope.restaurant=data.restaurant,$scope.commandes=data.panier.commandes},function(err){console.log(err),toastr.error(err.statusText)}),$cookieStore.get("choixPaiement")&&($scope.choixPaiement=$cookieStore.get("choixPaiement"))},$scope.validLivraison=function(){$ClientsService.modif($scope.client._id,$scope.client).then(function(client){$scope.client=client,$location.path("/validation")},function(err){console.log(err),toastr.error(err.statusText)})},$scope.setChoixPaiement=function(choix){$cookieStore.put("choixPaiement",choix),$scope.choixPaiement=choix,console.log($scope.client),"enLigne"==choix?($scope.client.paiement.enLigne,$scope.client.paiement.surPlace,$scope.client.paiement.livraison):"surPlace"==choix?($scope.client.paiement.enLigne,$scope.client.paiement.surPlace,$scope.client.paiement.livraison):"livraison"==choix&&($scope.client.paiement.enLigne,$scope.client.paiement.surPlace,$scope.client.paiement.livraison),$ClientsService.modif($scope.client._id,$scope.client).then(function(client){$scope.client=client},function(err){console.log(err),toastr.error(err.statusText)}),$location.path("/livraison")}}]),myApp.controller("validationCtrl",["$scope","$rootScope","$location","$cookieStore","ProduitsService","IngredientsService","PanierService","ClientsService",function($scope,$rootScope,$location,$cookieStore,$ProduitsService,$IngredientsService,$PanierService,$ClientsService){$scope.commandes=[],$scope.panier=null,$scope.client=null,$scope.restaurant=null,$scope.choixPaiement=!1}]),angular.module("google.places",[]).factory("googlePlacesApi",["$window",function($window){if(!$window.google)throw"Global `google` var missing. Did you forget to include the places API script?";return $window.google}]).directive("gPlacesAutocomplete",["$parse","$compile","$timeout","$document","googlePlacesApi",function($parse,$compile,$timeout,$document,google){return{restrict:"A",require:"^ngModel",scope:{model:"=ngModel",options:"=?",forceSelection:"=?",customPlaces:"=?"},controller:["$scope",function($scope){}],link:function($scope,element,attrs,controller){function initEvents(){element.bind("keydown",onKeydown),element.bind("blur",onBlur),element.bind("submit",onBlur),$scope.$watch("selected",select)}function initAutocompleteDrawer(){var $drawer,drawerElement=angular.element("<div g-places-autocomplete-drawer></div>"),body=angular.element($document[0].body);drawerElement.attr({input:"input",query:"query",predictions:"predictions",active:"active",selected:"selected"}),$drawer=$compile(drawerElement)($scope),body.append($drawer),$scope.$on("$destroy",function(){$drawer.remove()})}function initNgModelController(){controller.$parsers.push(parse),controller.$formatters.push(format),controller.$render=render}function onKeydown(event){0!==$scope.predictions.length&&-1!==indexOf(hotkeys,event.which)&&(event.preventDefault(),event.which===keymap.down?($scope.active=($scope.active+1)%$scope.predictions.length,$scope.$digest()):event.which===keymap.up?($scope.active=($scope.active?$scope.active:$scope.predictions.length)-1,$scope.$digest()):13===event.which||9===event.which?($scope.forceSelection&&($scope.active=-1===$scope.active?0:$scope.active),$scope.$apply(function(){$scope.selected=$scope.active,-1===$scope.selected&&clearPredictions()})):27===event.which&&$scope.$apply(function(){event.stopPropagation(),clearPredictions()}))}function onBlur(event){0!==$scope.predictions.length&&($scope.forceSelection&&($scope.selected=-1===$scope.selected?0:$scope.selected),$scope.$digest(),$scope.$apply(function(){-1===$scope.selected&&clearPredictions()}))}function select(){var prediction;(prediction=$scope.predictions[$scope.selected])&&(prediction.is_custom?$scope.$apply(function(){$scope.model=prediction.place,$scope.$emit("g-places-autocomplete:select",prediction.place),$timeout(function(){controller.$viewChangeListeners.forEach(function(fn){fn()})})}):placesService.getDetails({placeId:prediction.place_id},function(place,status){status==google.maps.places.PlacesServiceStatus.OK&&$scope.$apply(function(){$scope.model=place,$scope.$emit("g-places-autocomplete:select",place),$timeout(function(){controller.$viewChangeListeners.forEach(function(fn){fn()})})})}),clearPredictions())}function parse(viewValue){var request;return viewValue&&isString(viewValue)?($scope.query=viewValue,request=angular.extend({input:viewValue},$scope.options),autocompleteService.getPlacePredictions(request,function(predictions,status){$scope.$apply(function(){var customPlacePredictions;clearPredictions(),$scope.customPlaces&&(customPlacePredictions=getCustomPlacePredictions($scope.query),$scope.predictions.push.apply($scope.predictions,customPlacePredictions)),status==google.maps.places.PlacesServiceStatus.OK&&$scope.predictions.push.apply($scope.predictions,predictions),$scope.predictions.length>5&&($scope.predictions.length=5)})}),$scope.forceSelection?controller.$modelValue:viewValue):viewValue}function format(modelValue){var viewValue="";return isString(modelValue)?viewValue=modelValue:isObject(modelValue)&&(viewValue=modelValue.formatted_address),viewValue}function render(){return element.val(controller.$viewValue)}function clearPredictions(){$scope.active=-1,$scope.selected=-1,$scope.predictions=[]}function getCustomPlacePredictions(query){var place,match,i,predictions=[];for(i=0;i<$scope.customPlaces.length;i++)place=$scope.customPlaces[i],match=getCustomPlaceMatches(query,place),match.matched_substrings.length>0&&predictions.push({is_custom:!0,custom_prediction_label:place.custom_prediction_label||"(Custom Non-Google Result)",description:place.formatted_address,place:place,matched_substrings:match.matched_substrings,terms:match.terms});return predictions}function getCustomPlaceMatches(query,place){var fragment,termFragments,i,q=query+"",terms=[],matched_substrings=[];for(termFragments=place.formatted_address.split(","),i=0;i<termFragments.length;i++)fragment=termFragments[i].trim(),q.length>0&&(fragment.length>=q.length?(startsWith(fragment,q)&&matched_substrings.push({length:q.length,offset:i}),q=""):startsWith(q,fragment)?(matched_substrings.push({length:fragment.length,offset:i}),q=q.replace(fragment,"").trim()):q=""),terms.push({value:fragment,offset:place.formatted_address.indexOf(fragment)});return{matched_substrings:matched_substrings,terms:terms}}function isString(val){return"[object String]"==Object.prototype.toString.call(val)}function isObject(val){return"[object Object]"==Object.prototype.toString.call(val)}function indexOf(array,item){var i,length;if(null===array)return-1;for(length=array.length,i=0;i<length;i++)if(array[i]===item)return i;return-1}function startsWith(string1,string2){return 0===toLower(string1).lastIndexOf(toLower(string2),0)}function toLower(string){return null===string?"":string.toLowerCase()}var keymap={tab:9,enter:13,esc:27,up:38,down:40},hotkeys=[keymap.tab,keymap.enter,keymap.esc,keymap.up,keymap.down],autocompleteService=new google.maps.places.AutocompleteService,placesService=new google.maps.places.PlacesService(element[0]);!function(){$scope.query="",$scope.predictions=[],$scope.input=element,$scope.options=$scope.options||{},initAutocompleteDrawer(),initEvents(),initNgModelController()}()}}}]).directive("gPlacesAutocompleteDrawer",["$window","$document",function($window,$document){return{restrict:"A",scope:{input:"=",query:"=",predictions:"=",active:"=",selected:"="},template:['<div class="pac-container" ng-if="isOpen()" ng-style="{top: position.top+\'px\', left: position.left+\'px\', width: position.width+\'px\'}" style="display: block;" role="listbox" aria-hidden="{{!isOpen()}}">','  <div class="pac-item" g-places-autocomplete-prediction index="$index" prediction="prediction" query="query"','       ng-repeat="prediction in predictions track by $index" ng-class="{\'pac-item-selected\': isActive($index) }"','       ng-mouseenter="selectActive($index)" ng-click="selectPrediction($index)" role="option" id="{{prediction.id}}">',"  </div>","</div>"].join(""),link:function($scope,element){function getDrawerPosition(element){var domEl=element[0],rect=domEl.getBoundingClientRect(),docEl=$document[0].documentElement,body=$document[0].body,scrollTop=$window.pageYOffset||docEl.scrollTop||body.scrollTop,scrollLeft=$window.pageXOffset||docEl.scrollLeft||body.scrollLeft;return{width:rect.width,height:rect.height,top:rect.top+rect.height+scrollTop,left:rect.left+scrollLeft}}element.bind("mousedown",function(event){event.preventDefault()}),$window.onresize=function(){$scope.$apply(function(){$scope.position=getDrawerPosition($scope.input)})},$scope.isOpen=function(){return $scope.predictions.length>0},$scope.isActive=function(index){return $scope.active===index},$scope.selectActive=function(index){$scope.active=index},$scope.selectPrediction=function(index){$scope.selected=index},$scope.$watch("predictions",function(){$scope.position=getDrawerPosition($scope.input)},!0)}}}]).directive("gPlacesAutocompletePrediction",[function(){return{restrict:"A",scope:{index:"=",prediction:"=",query:"="},template:['<span class="pac-icon pac-icon-marker"></span>','<span class="pac-item-query" ng-bind-html="prediction | highlightMatched"></span>','<span ng-repeat="term in prediction.terms | unmatchedTermsOnly:prediction">{{term.value | trailingComma:!$last}}&nbsp;</span>','<span class="custom-prediction-label" ng-if="prediction.is_custom">&nbsp;{{prediction.custom_prediction_label}}</span>'].join("")}}]).filter("highlightMatched",["$sce",function($sce){return function(prediction){var matched,matchedPortion="",unmatchedPortion="";return prediction.matched_substrings.length>0&&prediction.terms.length>0&&(matched=prediction.matched_substrings[0],matchedPortion=prediction.terms[0].value.substr(matched.offset,matched.length),unmatchedPortion=prediction.terms[0].value.substr(matched.offset+matched.length)),$sce.trustAsHtml('<span class="pac-matched">'+matchedPortion+"</span>"+unmatchedPortion)}}]).filter("unmatchedTermsOnly",[function(){return function(terms,prediction){var i,term,filtered=[];for(i=0;i<terms.length;i++)term=terms[i],prediction.matched_substrings.length>0&&term.offset>prediction.matched_substrings[0].length&&filtered.push(term);return filtered}}]).filter("trailingComma",[function(){return function(input,condition){return condition?input+",":input}}]),angular.module("categorie.services",[]).service("CategorieService",["$q","$http",function($q,$http){return{get:function(id){return $http.post("/api/categories/get",{id:id}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Non trouvé"):$q.reject(err)})},getAll:function(){return $http.get("/api/categories/getAll").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Non trouvé"):$q.reject(err)})},add:function(categorie){return $http.put("/api/categories/",{categorie:categorie}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Non trouvé"):$q.reject(err)})},modif:function(categorie){return $http.patch("/api/categories/",{categorie:categorie}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Non trouvé"):$q.reject(err)})},del:function(categorie){return $http.delete("/api/categories/?id="+categorie._id).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Non trouvé"):$q.reject(err)})}}}]),angular.module("clients.services",[]).service("ClientsService",["$q","$http",function($q,$http){return{get:function(id){return $http.post("/api/clients/get",{id:id}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},getMe:function(){return $http.get("/api/clients/getMe").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},getAll:function(){return $http.get("/api/clients/getAll").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},add:function(client){return $http.put("/api/clients/",{client:client}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},modif:function(clientId,client){return $http.patch("/api/clients/",{clientId:clientId,client:client}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},del:function(clientId){return $http.delete("/api/clients/",{clientId:clientId}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})}}}]),angular.module("configuration.services",[]).service("ConfigurationService",["$q","$http",function($q,$http){return{get:function(id){return $http.post("/api/configuration/get",{id:id}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},add:function(configuration){return $http.post("/api/configuration/add",{configuration:configuration}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},modif:function(configId,configuration){return $http.post("/api/configuration/modif",{configId:configId,configuration:configuration}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},del:function(configId){return $http.post("/api/configuration/del",{configId:configId}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})}}}]),angular.module("ingredients.services",[]).service("IngredientsService",["$q","$http",function($q,$http){return{get:function(id){return $http.post("/api/ingredients/get",{id:id}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},getAll:function(){return $http.get("/api/ingredients/getAll").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},add:function(ingredient){return $http.put("/api/ingredients/",{ingredient:ingredient}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},modif:function(ingredient){return $http.patch("/api/ingredients/",{ingredient:ingredient}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},del:function(ingredient){return $http.delete("/api/ingredients/?id="+ingredient._id).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})}}}]),angular.module("panier.services",[]).service("PanierService",["$q","$http",function($q,$http){return{get:function(){return $http.get("/api/panier/").then(function(response){return $q.when(response.data)},function(err){return $q.reject(err)})},getCommande:function(commandeId){return $http.post("/api/panier/commande/",{commande:{_id:commandeId}}).then(function(response){return $q.when(response.data)},function(err){return $q.reject(err)})},addCommande:function(produit,infos){return $http.put("/api/panier/",{produit:produit,infos:infos}).then(function(response){return $q.when(response.data)},function(err){return $q.reject(err)})},modifCommande:function(commande,infos){return $http.patch("/api/panier/",{commande:commande,infos:infos}).then(function(response){return $q.when(response.data)},function(err){return $q.reject(err)})},delCommande:function(commande){return $http.delete("/api/panier/?id="+commande._id).then(function(response){return $q.when(response.data)},function(err){return $q.reject(err)})},sendMail:function(client,panier){return $http.post("/api/panier/sendMail",{client:client,panier:panier}).then(function(response){return $q.when(response.data)},function(err){return $q.reject(err)})}}}]),angular.module("produits.services",["categorie.services"]).service("ProduitsService",["$q","$http","CategorieService",function($q,$http,$CategorieService){return{get:function(id){return $http.post("/api/produits/get",{id:id}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},getCategories:function(){return $CategorieService.getAll()},getByCategorie:function(categorie){return $http.post("/api/produits/getByCategorie",{categorie:categorie}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},getAll:function(){return $http.get("/api/produits/getAll").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},add:function(produit){return $http.put("/api/produits/",{produit:produit}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},modif:function(produit){return $http.patch("/api/produits/",{produit:produit}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})},del:function(produit){return $http.delete("/api/produits/?id="+produit._id).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("non trouvé"):$q.reject(err)})}}}]),angular.module("restaurant.services",[]).service("RestaurantService",["$q","$http",function($q,$http){return{getMe:function(){return $http.get("/api/restaurant/getMe").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):$q.reject(err)})},modif:function(restaurant){return $http.patch("/api/restaurant/",{restaurant:restaurant}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):$q.reject(err)})},getAdresse:function(){return $http.get("/api/restaurant/getAdresse").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):$q.reject(err)})},getCalendrier:function(){return $http.get("/api/restaurant/getCalendrier").then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):$q.reject(err)})},addCalendrier:function(date){return $http.put("/api/restaurant/calendrier",{date:date}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):500==err.status?$q.reject("Erreur Inconnus"):$q.reject(err)})},delCalendrier:function(date){return $http.delete("/api/restaurant/calendrier",{date:date}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):500==err.status?$q.reject("Erreur Inconnus"):$q.reject(err)})},modifCalendrier:function(date){return $http.patch("/api/restaurant/calendrier",{date:date}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):500==err.status?$q.reject("Erreur Inconnus"):$q.reject(err)})},addFermeture:function(date){return $http.put("/api/restaurant/fermeture",{date:date}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):500==err.status?$q.reject("Erreur Inconnus"):$q.reject(err)})},delFermeture:function(date){return $http.delete("/api/restaurant/fermeture",{date:date}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):500==err.status?$q.reject("Erreur Inconnus"):$q.reject(err)})},modifFermeture:function(date){return $http.patch("/api/restaurant/fermeture",{date:date}).then(function(response){return $q.when(response.data)},function(err){return 404==err.status?$q.reject("Objet non trouvés"):500==err.status?$q.reject("Erreur Inconnus"):$q.reject(err)})}}}]),myApp.service("anchorSmoothScroll",function(){this.scrollTo=function(eID){function currentYPosition(){return self.pageYOffset?self.pageYOffset:document.documentElement&&document.documentElement.scrollTop?document.documentElement.scrollTop:document.body.scrollTop?document.body.scrollTop:0}function elmYPosition(eID){for(var elm=document.getElementById(eID),y=elm.offsetTop,node=elm;node.offsetParent&&node.offsetParent!=document.body;)node=node.offsetParent,y+=node.offsetTop;return y}var startY=currentYPosition(),stopY=elmYPosition(eID),distance=stopY>startY?stopY-startY:startY-stopY;if(distance<100)return void scrollTo(0,stopY);var speed=Math.round(distance/100);speed>=20&&(speed=20);var step=Math.round(distance/25),leapY=stopY>startY?startY+step:startY-step,timer=0;if(stopY>startY)for(var i=startY;i<stopY;i+=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY+=step,leapY>stopY&&(leapY=stopY),timer++;else for(var i=startY;i>stopY;i-=step)setTimeout("window.scrollTo(0, "+leapY+")",timer*speed),leapY-=step,leapY<stopY&&(leapY=stopY),timer++}});